#!/bin/sh
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# NOTE: This agent has beed adapted from the Check_MK linux agent.

# Remove locale settings to eliminate localized outputs where possible
# Author: Christian Zigotzky <info@xenosoft.de>
export LC_ALL=C
unset LANG

export MK_LIBDIR="/to/be/changed"
export MK_CONFDIR="/to/be/changed"

# close standard input (for security reasons) and stderr
if [ "$1" = -d ]
then
    set -xv
else
    exec <&- 2>/dev/null
fi


echo '<<<check_mk>>>'
echo Version: 1.2.7i1
echo AgentOS: macosx

osver="$(uname -r)"

echo '<<<df>>>';
df -kPt hfs | sed -e 's/^\([^ ][^ ]*\) \(.*\)$/\1 hfs \2/' | sed 1d

echo '<<<cpu>>>';
echo `sysctl -n vm.loadavg | tr -d '{}'` `top -l 1 -n 1 | egrep ^Processes: |
awk '{print $4"/"$2;}'` `echo 'echo $$' | bash` `sysctl -n hw.ncpu`

echo '<<<mem>>>'
echo "MemTotal: $(echo $(sysctl -n hw.memsize)/1024 | bc) kB"
echo "MemFree: $(echo "( $(vm_stat | grep speculative: | awk '{print $3}') + $(vm_stat | grep inactive: | awk '{print $3}') + $(vm_stat | grep free: | awk '{print $3}') ) * $(vm_stat | grep Mach | awk '{print $8}') / 1024" | bc) kB"
echo "SwapTotal: 0 kB"
echo "SwapFree: 0 kB"
# FIXME: Just call vm_stat here, write a check plugin that uses that
# navite output of vm_stat

echo '<<<uptime>>>';
echo `date +%s` - `sysctl -n kern.boottime | cut -d' ' -f 4,7 | tr ',' '.' |
tr -d ' '` | bc
# FIXME: use sysctl -a for outputting *all* kernel values. Write
# checks plugins with subchecks for parsing that output. Maybe reduce
# the output size by grepping away totally useless parts

echo '<<<netctr>>>';
date +'%s'; netstat -inb | egrep -v '(^Name|lo|plip)' | grep Link | awk '{
print $1,$7,$5,$6,"0","0","0","0","0",$10,$8,$9,"0","0",$11,"0","0"; }'
# FIXME: send netstat -inb plain, write proper check plugins for
# clean parsing of the output

echo '<<<ps>>>'
ps ax -o user,vsz,rss,pcpu,command | sed -e 1d -e 's/ *\([^ ]*\) *\([^ ]*\) *\([^ ]*\) *\([^ ]*\) */(\1,\2,\3,\4) /'

# NTP seems to be enabled as a default
echo '<<<ntp>>>'
ntpq -np | sed -e 1,2d -e 's/^\(.\)/\1 /' -e 's/^ /%/'

# TCP Conn stats
echo '<<<tcp_conn_stats>>>'
netstat -ntfinet | awk ' /^tcp/ { c[$6]++; } END { for (x in c) { print x, c[x]; } }'


# Fileinfo-Check: put patterns for files into /etc/check_mk/fileinfo.cfg
if [ -r "$MK_CONFDIR/fileinfo.cfg" ] ; then
    echo '<<<fileinfo:sep(124)>>>'
    date +%s
    stat -f "%N|%z|%m" $(cat "$MK_CONFDIR/fileinfo.cfg")
fi

if type tmutil >/dev/null
then
    echo '<<<timemachine>>>'
    tmutil latestbackup 2>&1
fi

###############################
# Things up for takers:
###############################
# *OSX SW Raid status
# *launchctl daemon status
# *hw sensors, how to query them?
# *OSX Server specific stuff, LDAP, etc...
# *Rewrite cpu / ps check to be faster - takes >1s on my laptop
# ioreg -l zeigt etliche interessante Inventurdaten


# MK's Remote Plugin Executor
if [ -e "/etc/mrpe.cfg" ]
then
    echo '<<<mrpe>>>'
    grep -Ev '^[[:space:]]*($|#)' "/etc/mrpe.cfg" | \
    while read descr cmdline
    do
        PLUGIN=${cmdline%% *}
        OUTPUT=$(eval "$cmdline")
        echo "(${PLUGIN##*/}) $descr $? $OUTPUT" | tr \\n \\1
        echo
    done
fi
