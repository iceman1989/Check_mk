#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from agent:
# 2: Wlan Name, 42: Interface Name, 38, Connectet Clients

def inventory_cisco_wlc_clients(info):
    if len(info) > 0:
        return [ ('Summary', None ) ] + [ (x[0], None) for x in info ]

def check_cisco_wlc_clients(item, params, info):
    state = 0
    found = False
    for line in info:
        if item == "Summary":
            found = True
            interface = "Summary"
            num_of_clients = 0
            for l in info:
                num_of_clients += saveint(l[2])
            break

        if line[0] == item:
            interface = line[1]
            num_of_clients = saveint(line[2])
            found = True
            break

    if found:
        if params:
            crit_low, warn_low, warn_high, crit_high = params
            if num_of_clients < crit_low:
                state = 2
            elif num_of_clients < warn_low:
                state = 1
            elif num_of_clients > crit_high:
                state = 2
            elif num_of_clients > warn_high:
                state = 1

        perf = [ ("clients", num_of_clients, None, None) ]
        return state, "%d connections (%s)" % (num_of_clients, interface), perf

    return 3, "WiFi not found"

check_info["cisco_wlc_clients"] = {
    "check_function"        : check_cisco_wlc_clients,
    "inventory_function"    : inventory_cisco_wlc_clients,
    "service_description"   : "Clients",
    "group"                 : "wlc_clients",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') in [".1.3.6.1.4.1.9.1.1069",
                                                                        ".1.3.6.1.4.1.9.1.1645",
                                                                        ".1.3.6.1.4.1.9.1.1279"],
    "snmp_info"             : ( ".1.3.6.1.4.1.14179.2.1.1.1",  [ 2, 42, 38 ]),
}

