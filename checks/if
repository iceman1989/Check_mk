#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_if(info):
    return inventory_if_common(if_convert_to_if64(info))

def check_if(item, params, info):
    return check_if_common(item, params, if_convert_to_if64(info))

def if_convert_to_if64(info):
    newinfo = []
    for line in info:
        if saveint(line[0]) > 0: #Fix for switches with empty indexes
            newinfo.append(line[0:8] + ['0'] + line[8:12] + ['0'] + line[12:16] + line[1:2] + line[16:17])
    return newinfo

check_includes['if'] = [ "if.include" ]
check_info["if"] = {
    'check_function':          check_if,
    'inventory_function':      inventory_if,
    'service_description':     'Interface %s',
    'has_perfdata':            True,
    'snmp_info':               ( ".1.3.6.1.2.1.2.2.1", [
         1,            # ifIndex                 0
         2,            # ifDescr                 1
         3,            # ifType                  2
         5,            # ifSpeed                 3
         8,            # ifOperStatus            4
         10,           # ifInOctets              5
         11,           # ifInUcastPkts           6
         12,           # ifInNUcastPkts          7
         13,           # ifInDiscards            8
         14,           # ifInErrors              9
         16,           # ifOutOctets            10
         17,           # ifOutUcastPkts         11
         18,           # ifOutNUcastPkts        12
         19,           # ifOutDiscards          13
         20,           # ifOutErrors            14
         21,           # ifOutQLen              15
         6,            # ifPhysAddress          16
    ]),
    # check if number of network interfaces (IF-MIB::ifNumber.0) is at least 2
    # use if64 if possible and not disabled
    'snmp_scan_function':      \
         lambda oid: saveint(oid(".1.3.6.1.2.1.2.1.0")) >= 2 and \
             (if64_disabled(g_hostname) or not oid('.1.3.6.1.2.1.31.1.1.1.6.*')),
    'group':                   'if',
    'default_levels_variable': 'if_default_levels',
}
