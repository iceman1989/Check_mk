#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

fortigate_cpu_default_levels = (80.0, 90.0)

def check_fortigate_cpu(item, params, info):
    num_cpus = 0
    util = 0
    for line in info:
        util += int(line[0])
        num_cpus += 1
    if num_cpus == 0:
        return (3, "no data found in SNMP output")
    util = float(util) / num_cpus
    infotext = "%2.1f%% utilization at %d CPUs" % (util, num_cpus)
    warn, crit = params
    perfdata = [("util", util, warn, crit, 0, 100)]
    if util >= crit:
        return (2, infotext + " (critical at %d%%)" % crit, perfdata)
    elif util >= warn:
        return (1, infotext + " (warning at %d%%)" % warn, perfdata)
    else:
        return (0, infotext, perfdata)

check_info["fortigate_cpu"] = {
    "check_function"        : check_fortigate_cpu,
    "inventory_function"    : lambda info: [(None, "fortigate_cpu_default_levels")],
    "service_description"   : "CPU utilization",
    "has_perfdata"          : True,
    "group"                 : "cpu_utilization",
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.4.1.12356.1.8.0"),
    "snmp_info"		    : ( ".1.3.6.1.4.1.12356.1", [ 8 ]),
}

