#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


factory_settings["climaveneta_fan_default_levels"] = {
    "lower" : ( 200, 100 ),
    "upper" : ( 700, 800 ),
}


def inventory_climaveneta_fan(info):
    if len(info[0]) == 2:
        return [ (1, {}), (2, {}) ]


def check_climaveneta_fan(item, params, info):
    rpm = int(info[0][item - 1])
    l_warn, l_crit = params['lower']
    u_warn, u_crit = params['upper']
    perfdata = [("rpm", rpm )]
    message = "Speed at %d RPM" % rpm
    if rpm <= l_crit or rpm >= u_crit:
        return 2, message, perfdata
    elif rpm <= l_warn or rpm >= u_warn:
        return 1, message, perfdata
    else:
        return 0, message, perfdata


check_info["climaveneta_fan"] = {
    "check_function"           : check_climaveneta_fan,
    "inventory_function"       : inventory_climaveneta_fan,
    "service_description"      : "Fan %s",
    "has_perfdata"             : True,
    "snmp_scan_function"       : lambda oid: oid(".1.3.6.1.2.1.1.1.0") == "pCO Gateway",
    "snmp_info"                : (".1.3.6.1.4.1.9839.2.1.2", [ 42, 43 ] ),
    "group"                    : "hw_fans",
    "default_levels_variable"  : "climaveneta_fan_default_levels",
}

