#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

decru_fan_default_levels = (8000, 8400)

def inventory_decru_fans(info):
    return [ (l[0], "decru_fan_default_levels") for l in info ]

def check_decru_fans(item, params, info):
    for fan_name, rpm in info:
        if fan_name == item:
            rpm = int(rpm)
            crit, warn = params
            perfdata = [("rpm", rpm, 0, None, warn, crit)]
            infotxt = "%d RPM" % rpm
            if rpm <= crit:
                return (2, infotxt, perfdata)
            elif rpm <= warn:
                return (1, infotxt, perfdata)
            else:
                return (0, infotxt, perfdata)

    return (3, "fan not found")


check_info["decru_fans"] = {
    'check_function':          check_decru_fans,
    'inventory_function':      inventory_decru_fans,
    'service_description':     'FAN %s',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.4.1.12962.1.2.3.1', [2, 3]),
    'snmp_scan_function':      \
     lambda oid: "datafort" in oid('.1.3.6.1.2.1.1.1.0').lower(),
}
