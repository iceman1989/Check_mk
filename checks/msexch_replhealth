#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example Output:
# <<<msexch_replhealth:sep(58)>>>
# RunspaceId       : d58353f4-f868-43b2-8404-25875841a47b
# Server           : S0141KL
# Check            : ClusterService
# CheckDescription : Überprüft, ob der Status des lokalen Clusterdiensts einwandfrei ist.
# Result           : Prüfung bestanden
# Error            :
# Identity         :
# IsValid          : True
#
# RunspaceId       : d58353f4-f868-43b2-8404-25875841a47b
# Server           : S0141KL
# Check            : ReplayService
# CheckDescription : Überprüft, ob der Microsoft Exchange-Replikationsdienst ausgeführt wird.
# Result           : Prüfung bestanden
# Error            :
# Identity         :
# IsValid          : True
#

def inventory_msexch_replhealth(info):
    for line in info:
        if line[0].strip().lower() == "check":
            yield line[1].strip(), None


def check_msexch_replhealth(item, _no_params, info):
    getit = False
    for line in info:
        if len(line) == 2:
            key, val = map(lambda i: i.strip(), line)
            if key == "Check" and val == item:
                getit = True
            elif key == "Result" and getit:
                if val == "Passed" or val.endswith("fung bestanden"):
                    infotxt = "Test Passed"
                    state = 0
                else:
                    infotxt = val
                    state = 1
                return state, infotxt


check_info['msexch_replhealth'] = {
    "inventory_function"    : inventory_msexch_replhealth,
    "check_function"        : check_msexch_replhealth,
    "service_description"   : "Exchange Replication Health %s",
}
