#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

knuerr_rms_humidity_default_levels = ( 30, 40, 70, 75 )

def inventory_knuerr_rms_humidity(info):
    return [ ( None, 'knuerr_rms_humidity_default_levels') ]

def check_knuerr_rms_humidity(_no_item, params, info):
    name, reading = info[0]
    reading = float(reading) / 10
    crit_low, warn_low, warn_high, crit_high = params
    infotext = "Humidity is: %.1f %% on Sensor %s" % ( reading, name )
    levels = ' (Warn/Crit at %s/%s or below %s/%s)' % ( warn_high, crit_high, warn_low, crit_low )
    perfdata = [ ('humidity', reading, crit_low, warn_low, warn_high, crit_high ) ]
    state = 0
    if reading >= crit_high or reading <= crit_low:
        state = 2
        infotext += levels
    elif reading >= warn_high or reading <= warn_low:
        state = 1
        infotext += levels
    return state, infotext, perfdata

check_info["knuerr_rms_humidity"] = {
    "check_function"        : check_knuerr_rms_humidity,
    "inventory_function"    : inventory_knuerr_rms_humidity,
    "service_description"   : "Humidity",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.3711.15.1",
    "snmp_info"             : ( ".1.3.6.1.4.1.3711.15.1.1.1.2" , [ 2 , 4 ]),
    "group"                 : "single_humidity"
}

