#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


liebert_bat_temp_default = (40, 50) # warning / critical

def inventory_liebert_bat_temp(info):
    if info:
        return [ ( None, "liebert_bat_temp_default") ]

def check_liebert_bat_temp(item, params, info):
    warn, crit = params
    if not info:
        return 3, "Data Missing in SNMP Output"
    line = info[0]
    temp = saveint(line[0])
    perfdata = [ ( "temp", temp, warn, crit, 80 ) ]
    infotext = "temperature: %d°C , (warn/crit at %d°C/%d°C) " % \
                (temp, warn, crit)

    if temp >= crit:
        return (2, infotext, perfdata)
    elif temp >= warn:
        return (1, infotext, perfdata)
    else:
	return (0, infotext, perfdata)


check_info['liebert_bat_temp'] = {
  "inventory_function"  : inventory_liebert_bat_temp,
  "check_function"      : check_liebert_bat_temp,
  "service_description" : "Battery Temp",
  "has_perfdata"        : True,
  "group"               : "hw_single_temperature",
  "snmp_info"           : (".1.3.6.1.4.1.476.1.42.3.4.1.3.3.1.3", "1"),
  "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in \
                         [".1.3.6.1.4.1.476.1.42"]

}
