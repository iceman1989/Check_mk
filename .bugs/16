Title: check_mk -II bei Clustern löscht die Checks nicht
Component: core
State: done
Class: bug
Date: 2010-12-21 12:15:32
Fun: 0

Wenn man ein check_mk -II macht, dann werden clustered
services nicht entfernt. Um das sauber hinzubekommen, muss man sicherstellen,
dass der Anwender  check_mk -II mit *allen* nodes aufgerufen hat. Denn nur
so darf man die Checks auf dem Cluster entfernen. Sonst kann man nicht sicher
sein, dass Services wegfliegen, die eigentlich von einem anderem Node kommen.
Das müsste dann auch micht clustered_services_of funktionieren. Ich muss
einfach alle Cluster durchgehen, feststellen, ob jeweils alle deren Nodes
inventurisiert werden, und darf dann die betroffenen Services wegwerfen.

Man könnte auch überlegen, dass man ein -I oder -II auf den Cluster-Namen
zulässt und dann einfach automatisch anstelle dessen die Nodes inventarisiert
und zusätzlich die Checks vom Cluster entfernt. Das könnte eine einfache
Lösung sein. So sorgt der User selbst dafür, dass der Cluster richtig
behandelt wird. 

Dabei stellt sich mir die Frage, ob es eigentlich einen Inventur-Check
auf den Cluster gibt, oder wie das geregelt ist.

Noch weiter in die Zukunft gedacht, gibt es die Idee, dass clustered_services
(und auch ignored_services), garnicht mehr bei der Inventur angewandt wird,
sondern generell nach dem Einlesen der Autochecks. Die manuellen Checks
sollten ja nicht betroffen sein. Wenn man schon was in ignored services
auflistet, warum sollte es dann trotzdem gecheckt werden, blos weil man
es man früher aufgenommen hat?

Der Vorteil - im Bezug auf die Clustered Services - könnte sein, dass man
noch weiß, woher der Service ursprünglich kam. Andererseits kann dann
folgendes passieren:

1. Inventur findet service X auf Node A
2. service schenkt auf B
3. Man macht cmk -II auf A
4. nun ist der Service weg!

===> Ist also auch keine wirklich gute Lösung.

2011-04-28 08:37:57: changed state open -> done
-II entfernt jetzt auch die Cluster Checks, falls alle nodes
angegeben wurden.
