#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# check_mk plugin to monitor storage systems like Fujitsu ETERNUS DX80 S2 supporting FJDARY-E100.MIB
# Copyright (c) 2012 FuH Entwicklungsgesellschaft mbH, Umkirch, Germany. All rights reserved.
# Author: Philipp Hoefflin, 2012, hoefflin+cmk@fuh-e.de

# example snmpwalk output:
# snmpwalk -c public -v 1 dx80 .1.3.6.1.4.1.211.1.21.1.100.2.19.2.1.1
# FJDARY-E100::fjdaryDiskStatus.0 = INTEGER: spare(65)
# FJDARY-E100::fjdaryDiskStatus.1 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.2 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.3 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.4 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.5 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.6 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.7 = INTEGER: available(1)
# FJDARY-E100::fjdaryDiskStatus.8 = INTEGER: notavailable(3)
# FJDARY-E100::fjdaryDiskStatus.9 = INTEGER: notavailable(3)
# FJDARY-E100::fjdaryDiskStatus.10 = INTEGER: notavailable(3)
# FJDARY-E100::fjdaryDiskStatus.11 = INTEGER: notavailable(3)
# FJDARY-E100::fjdaryDiskStatus.12 = INTEGER: notavailable(3)
# snmpwalk -c public -v 1 dx80 .1.3.6.1.4.1.211.1.21.1.100.2.19.2.1.3
# FJDARY-E100::fjdaryDiskIndex.0 = INTEGER: 0
# FJDARY-E100::fjdaryDiskIndex.1 = INTEGER: 1
# FJDARY-E100::fjdaryDiskIndex.2 = INTEGER: 2
# FJDARY-E100::fjdaryDiskIndex.3 = INTEGER: 3
# FJDARY-E100::fjdaryDiskIndex.4 = INTEGER: 4
# FJDARY-E100::fjdaryDiskIndex.5 = INTEGER: 5
# FJDARY-E100::fjdaryDiskIndex.6 = INTEGER: 6
# FJDARY-E100::fjdaryDiskIndex.7 = INTEGER: 7
# FJDARY-E100::fjdaryDiskIndex.8 = INTEGER: 8
# FJDARY-E100::fjdaryDiskIndex.9 = INTEGER: 9
# FJDARY-E100::fjdaryDiskIndex.10 = INTEGER: 10
# FJDARY-E100::fjdaryDiskIndex.11 = INTEGER: 11
# FJDARY-E100::fjdaryDiskIndex.12 = INTEGER: 12

# --------------------------------------------------------------------------------
# 1. Summary version of check -> all disks into one service

check_includes['fjdarye100_disks.summary'] = ["fjdarye.include"]

# 1: fjdaryDiskIndex, 3: fjdaryDiskStatus

# --------------------------------------------------------------------------------
# 2. Single disk version of check -> one check for each disk

check_includes['fjdarye100_disks'] = ["fjdarye.include"]

# 1: fjdaryDiskIndex, 3: fjdaryDiskStatus


check_info["fjdarye100_disks.summary"] = {
    'check_function':          check_fjdarye_disks_summary,
    'inventory_function':      inventory_fjdarye_disks_summary,
    'service_description':     'Disk summary',
    # 1: fjdaryDiskIndex, 3: fjdaryDiskStatus
    'snmp_info':               ('.1.3.6.1.4.1.211.1.21.1.100.2.19.2.1', [1, 3]),
    'snmp_scan_function':      \
          lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.211.1.21.1.100",
}

check_info["fjdarye100_disks"] = {
    'check_function':          check_fjdarye_disks,
    'inventory_function':      inventory_fjdarye_disks,
    'service_description':     'Disk %s',
    # 1: fjdaryDiskIndex, 3: fjdaryDiskStatus
    'snmp_info':               ('.1.3.6.1.4.1.211.1.21.1.100.2.19.2.1', [1, 3]),
    'snmp_scan_function':      \
          lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.211.1.21.1.100",
    'group':                   'raid_disk',
}
