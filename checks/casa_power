#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_casa_power(info):
    inventory = []
    for idx, unit in enumerate(info):
        inventory.append( (idx, None) )
    return inventory

def check_casa_power(item, no_params, info):
    unit_nr = int(item)
    if len(info) < unit_nr:
        return (3, "Power Supply %s not found in snmp output" % item)

    status = info[unit_nr][0]
    if status == "1":
        return (0, "Power supply OK")
    elif status == "3": # not sure if this state is possible
        return (1, "Power supply working over threshold (!)")
    elif status == "2": # not sure if this state is possible
        return (0, "Power supply working under threshold (!)") # OK, backup power..
    elif status == "0":
        return (3, "Power supply - Unknown status (!)")
    elif status == "4":
        return (2, "Power Failure(!!)")


check_info["casa_power"] = {
    "check_function"        : check_casa_power,
    "inventory_function"    : inventory_casa_power,
    "service_description"   : "Power %s",
    "has_perfdata"          : False,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.20858.2."),
    "snmp_info"             :
               ( ".1.3.6.1.4.1.20858.10.33.1.5.1.4", [ '' ] ), # Power State

}
