#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<citrix_sessions>>>
#sessions 1
#active_sessions 1
#inactive_sessions 0

citrix_sessions_default_levels = {
   "total"     : ( 60, 65 ),
   "active"     : ( 60, 65 ),
   "inactive"   : ( 10, 15 ),
}
def inventory_citrix_sessions(info):
    return [ ( None, "citrix_sessions_default_levels" )]

def check_citrix_sessions(_no_item, params, info):
    session = {}
    session['total'], session['active'], session['inactive'] = \
    map(int, (info[0][1], info[1][1], info[2][1]))
    state = 0
    messages = []
    perf = []
    for what in [ 'total', 'active', 'inactive' ]:
        warn, crit = params[what]
        perf.append(( what, session[what], warn, crit ))
        if session[what] > crit:
            messages.append("%s: %s(!!)" % ( what, session[what] ))
            state = 2
        elif session[what] > warn:
            messages.append("%s: %s(!)" % ( what, session[what] ))
            state = max(state, 1)
        else:
            messages.append("%s: %s" % ( what, session[what] ))

    return state, ", ".join(messages), perf

check_info["citrix_sessions"] = {
    "group"                 : "citrix_sessions",
    "check_function"        : check_citrix_sessions,
    "inventory_function"    : inventory_citrix_sessions,
    "service_description"   : "Citrix Sessions",
    "has_perfdata"          : True,
}
