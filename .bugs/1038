Title: problem with mrpe if lable has white space characters
Component: checks
Class: bug
State: wontfix
Date: 2013-08-27 12:12:33
Targetversion: future

habe heute eine seltsame Sache mit einigen MRPE Checks gehabt.  Falls die
Checks Performance Daten liefern und das Label der Performance Daten
Leerzeichen enth채lt so wir der Check mit einer Exception abgebrochen.

Traceback (most recent call last):
  File "/usr/share/check_mk/modules/check_mk.py", line 5442, in <module>
    do_check(hostname, ipaddress, check_types)
  File "/usr/share/check_mk/modules/check_mk_base.py", line 888, in do_check
    agent_version, num_success, error_sections, problems = do_all_checks_on_host(hostname, ipaddress, only_check_types)
  File "/usr/share/check_mk/modules/check_mk_base.py", line 1197, in do_all_checks_on_host
    result = check_function(item, params, info)
  File "/usr/share/check_mk/checks/mrpe", line 89, in check_mrpe
    perf_parsed = map(mrpe_parse_perfdata, perfdata)
  File "/usr/share/check_mk/checks/mrpe", line 41, in mrpe_parse_perfdata
    varname, valuetxt = perfinfo.split("=", 1)
ValueError: need more than 1 value to unpack

Bei genauerer Untersuchung hab ich festgestellt das dieses Verhalten seit dem
Umbau des MRPE am 22.05. (Commit 7705017d0d5db5093d9bdaa1538eecac56832dfe)
auftritt.  Das Problem besteht aus zwei Punkten.  Einmal diese Zeile perfdata
= parts[1].strip().split() Hierbei werden nicht nur vorn und hinten die
Leerzeichen abgeschnitten sondern auch der String vom Performancedaten Label
zerschnitten.  Beispiel: 'Cluster Groups on This Node'=0;0;0 Perfdaten noch ok
["'Cluster", 'Groups', 'on', 'This', "Node'=0;0;0"] nach der "Behandlung"

Der zweite Punkt tritt dann auf wenn ich den String hier im ganzen lasse.
'Cluster Groups on This Node'=0;0;0 und es nur einen Perfomance Daten Wert
gibt dann wird perfdata nicht zur Liste und bringt einen Fehler dann beim
Aufruf der map Funktion in Zeile 90 Deshalb hab ich extra noch vor der ersten
perfdata Zuweisung in Zeile 70 eine Zeile eingef체gt mit perfdata = [] und
Zeile 70 auf perfdata += parts[1].strip() ge채ndert.  Danach funktionieren
wieder alle meine MRPE Checks mit Performance Daten ohne Fehler.

Einen MRPE Check mit mehreren Werten hatte ich leider nicht an der Hand
zum testen.  Damit ist der Abschnitt ab # Further lines noch offen ob das
alles so klappt. :)



mrpe.diff

--- a/mrpe        2013-06-26 10:05:15.000000000 +0200
+++ b/mrpe        2013-06-26 14:59:54.000000000 +0200
@@ -57,6 +57,7 @@
             line = line[1:]
         else:
             check_name = None
+        perfdata = []
         if line[0] == item:
             state = int(line[1])
             # convert to original format by joining and replacing \1 back with \n
@@ -67,7 +68,7 @@
             parts = lines[0].split("|", 1)
             output = [parts[0].strip()]
             if len(parts) > 1:
-                perfdata = parts[1].strip().split()
+                perfdata.append(parts[1].strip())
             else:
                 perfdata = []

2013-10-15 04:17:00: changed state open -> wontfix
Check_MK unterst체tzt keine Leerzeichen in Variablennamen von 
Perfdaten. Hat es noch nie. Auch der Microcore kann's nicht.
Widerspricht dem Nagios-Standard. Die Spaces machen sowieso
auch an vielen anderen Stellen Probleme.
