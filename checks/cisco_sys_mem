#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# cseSysMemoryUtilization   .1.3.6.1.4.1.9.9.305.1.1.2.0
#

cisco_sys_mem_default_levels = (80.0, 90.0)

def inventory_cisco_sys_mem(info):
    if info:
        return [ (None, "cisco_sys_mem_default_levels") ]
    else:
        return []

def check_cisco_sys_mem(_no_item, params, info):
    warn, crit = params
    if info[0][0]:
       mem_used =  float(info[0][0])
       perfdata = [("mem_used", mem_used, warn, crit, 0, 100)]
       infotext = "%2.1f%% of supervisor memory used" % mem_used
       if mem_used >= crit:
           return (2, infotext + " (critical at %2.1f%%)" % crit, perfdata)
       elif mem_used >= warn:
           return (1, infotext + " (warning at %2.1f%%)" % warn, perfdata)
       else:
           return (0, infotext, perfdata)


check_info["cisco_sys_mem"] = {
    "check_function"        : check_cisco_sys_mem,
    "inventory_function"    : inventory_cisco_sys_mem,
    "service_description"   : "Supervisor Mem Used",
    "has_perfdata"          : True,
    "group"                 : "cisco_supervisor_mem", # seperate group since only percentage
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.1.0").startswith("Cisco NX-OS"),
    "snmp_info"		    : ( ".1.3.6.1.4.1.9.9.305.1.1.2", "0" ),
}
