#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<hpux_serviceguard:sep(124)>>>
# summary=degraded
# node:hgs-sd1-srv2|summary=ok
# node:hgs-sd1-srv1|summary=ok
# node:hgs-sd2-srv1|summary=ok
# package:AKKP|summary=degraded
# package:ADBP|summary=degraded
# package:ADBT|summary=degraded
# package:KORRP|summary=degraded
# package:KVNAP|summary=degraded
# package:ARCP|summary=degraded
# package:AKKT|summary=degraded
# package:AVDT|summary=degraded
# package:KVNAB|summary=degraded
# package:AVDP|summary=degraded
# package:SDBP|summary=degraded

def inventory_hpux_serviceguard(info):
    inventory = []
    for line in info:
        if len(line) == 1:
            item = "Total Status"
        else:
            item = line[0]
        inventory.append((item, None))
    return inventory

def check_hpux_serviceguard(item, _no_params, info):
    for line in info:
        if (item == "Total Status" and len(line) == 1) or \
            (item == line[0] and len(line) == 2):
            status = line[-1].split("=")[-1]
            if status == "ok":
                code = 0
            elif status == "degraded":
                code = 1
            else:
                code = 2
            return (code, "state is %s" % status)

    return (3, "No such item found")


check_info["hpux_serviceguard"] = {
    'check_function':          check_hpux_serviceguard,
    'inventory_function':      inventory_hpux_serviceguard,
    'service_description':     'Serviceguard',
}
