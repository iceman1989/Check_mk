#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_dell_chassis_powersupplies(info):
    inventory = []
    for line in info:
        item = re.sub("\.", "-", line[0])
        inventory.append( ( item, None ) )
    return inventory

def check_dell_chassis_powersupplies(item, _no_params, info):
    for oid_end, voltage, current, maxpower in info:
        if item == re.sub("\.", "-", oid_end):
            power = savefloat(voltage) * savefloat(current)
            state = 0
            infotext = ""
            infotext += "current/max Power: %.2f / %s, Current: %s, Voltage: %s" \
                            % ( power, maxpower, current, voltage )
            perfdata = [ ( "power", str(power)+"Watt", 0, maxpower , "", maxpower ) ]

            if savefloat(current) == 0:
                infotext = infotext + " - device in standby"

            return state, infotext, perfdata

    return 3, "unknown power supply"

check_info["dell_chassis_powersupplies"] = {
    "check_function"        : check_dell_chassis_powersupplies,
    "inventory_function"    : inventory_dell_chassis_powersupplies,
    "service_description"   : "Power Supply %s",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10892.2.4.2.1", [
                                      OID_END,
                                      "5", # drsPSUVoltsReading  0
                                      "6", # drsPSUAmpsReading   1
                                      "7", # drsPSUWattsReading  2
                              ]),
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == ".1.3.6.1.4.1.674.10892.2",
}

