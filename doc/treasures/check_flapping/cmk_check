#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# This is the Check_MK check to configure active checks of check_flapping
# via WATO. It must be placed into share/check_mk/checks directory.

def check_flapping_arguments(params):
    description, svc_patterns, settings = params

    args = ''

    if "timerange" in settings:
        args += ' -r %d' % int(settings["timerange"])

    if "num_state_changes" in settings:
        args += ' -w %d' % int(settings["num_state_changes"][0])
        args += ' -c %d' % int(settings["num_state_changes"][1])

    args += ' %s %s' % (g_hostname, ' '.join([ quote_shell_string(s) for s in svc_patterns ]))

    return args

active_check_info['flapping'] = {
    "command_line"        : '$USER2$/check_flapping $ARG1$',
    "argument_function"   : check_flapping_arguments,
    "service_description" : lambda params: "flapping %s" % params[0],
    "has_perfdata"        : True,
}

