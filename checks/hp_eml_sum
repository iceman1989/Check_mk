#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

hp_eml_sum_map = {
    # snmp_value: (nagios_status, txt)
    '1': (3, 'unknown'),
    '2': (0, 'unused'),
    '3': (0, 'ok'),
    '4': (1, 'warning'),
    '5': (2, 'critical'),
    '6': (2, 'nonrecoverable'),
}

def inventory_hp_eml_sum(info):
    if info and info[0]:
        return [(None, None)]

def check_hp_eml_sum(_no_item, _no_param, info):
    if not info or not info[0]:
        return (3, "Summary status information missing")

    op_status, manufacturer, model, serial, version = info[0]
    status, status_txt = hp_eml_sum_map.get(op_status, (3, 'unhandled op_status (%s)' % op_status))

    return (status, 'Summary State is "%s", Manufacturer: %s, '
                    'Model: %s, Serial: %s, Version: %s' %
             (status_txt, manufacturer, model, serial, version))

check_info["hp_eml_sum"] = {
    'check_function':          check_hp_eml_sum,
    'inventory_function':      inventory_hp_eml_sum,
    'service_description':     'Summary Status',
    'snmp_info':               (
         ".1.3.6.1.4.1.11.2.36.1.1.5.1.1", [
            3,  # op_status
            7,  # manufacturer
            9,  # model
            10, # serial
            11, # version
    ]),
    'snmp_scan_function':      \
          lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.11.10.2.1.3.20",
}
