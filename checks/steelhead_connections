#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

steelhead_counter_names = {
    1: "optimized",
    2: "passthrough",
    3: "halfOpened",
    4: "halfClosed",
    5: "established",
    6: "active",
    7: "total",
}

def inventory_steelhead_connections(info):
    if len(info) >= 7:
        return [(None, None)]


def check_steelhead_connections(item, params, info):
    values = {}
    for line in info:
        oid, value = line
        oidparts = oid.strip('.').split('.')
        itemname = steelhead_counter_names.get(int(oidparts[11]), "unknown")
        values[itemname] = int(value)

    perfdata = []
    infos = []
    # leave out total and optimized since they can be computed
    for v in [ "active", "established", "halfOpened", "halfClosed", "passthrough" ]:
        infos.append("%s: %d" % (v, values[v]))
        perfdata.append((v, values[v]))
    return (0, "%d connections: %s" % (values["total"], ", ".join(infos)), perfdata)


check_info['steelhead_connections'] = (check_steelhead_connections, "Connections", 1, inventory_steelhead_connections)

snmp_info['steelhead_connections']  = ( ".1.3.6.1.4.1.17163.1.1.5", [ OID_STRING, 2 ])

snmp_scan_functions['steelhead_connections'] = \
    lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.17163.")
