#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


printer_supply_ricoh_default = ( 20, 10 )

def inventory_printer_supply_ricoh(info):
    return [ (x[0], "printer_supply_ricoh_default") for x in info ]

def check_printer_supply_ricoh(item, params, info):
    warn, crit = params
    for line in info:
        if item == line[0]:
            state = 0
            level = saveint(line[1])
            if level < crit:
                state = 2
            elif level < warn:
                state = 1
            message = "Remaining: %s%% (levels at %d%%/%d%%) " % (level, warn, crit)
            perfdata = [ ("level", level, warn, crit, 0, 100)]
            return (state, message, perfdata)
    return(3, "Supply information not found")

check_info['printer_supply_ricoh'] = {
  "inventory_function"  : inventory_printer_supply_ricoh,
  "check_function"      : check_printer_supply_ricoh,
  "service_description" : "Supply %s",
  "has_perfdata"        : True,
  "group"               : "printer_supply",
  "snmp_info"           : ( ".1.3.6.1.4.1.367.3.2.1.2.24.1.1", [ 2, 5 ] ),
  "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in [ ".1.3.6.1.4.1.367.1.1" ]

}
