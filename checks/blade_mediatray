#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_blade_mediatray(info):
    if len(info) == 1 and info[0][0] == "1":
        return [(None, None, None)]

def check_blade_mediatray(_no_item, _no_params, info):
    if len(info) < 1:
        return (3, "no information about media tray in SNMP output")
    present = info[0][0]
    communicating = info[0][1]
    if present != "1":
        return (2, "media tray not present")
    elif communicating != "1":
        return (2, "media tray not communicating")
    else:
        return (0, "media tray present and communicating")





check_info["blade_mediatray"] = {
    'check_function':          check_blade_mediatray,
    'inventory_function':      inventory_blade_mediatray,
    'service_description':     'Media tray',
    'snmp_info':               ('.1.3.6.1.4.1.2.3.51.2.2.5.2', [74, 75]),
    'snmp_scan_function':      \
     lambda oid: re.match('BladeCenter( Advanced)* Management Module', oid(".1.3.6.1.2.1.1.1.0")) != None,
}
