title: Age, size and count of a group of files
agents: windows, linux, freebsd, macosx, solaris
catalog: os/files
license: GPL
distribution: check_mk
description:
 This check monitors the size, age and the count of a group of files
 in the target host's filesystem.  You can set lower and upper
 limits for each: size of files, age of oldest, the newest file
 and for the total count of files.

 This check needs some configuration in the agent, as the agent needs to
 know the information about which files need to be sent.  Please refer to
 fileinfos manpage for information about setting up the agent.

 The check also needs a configured file grouping pattern.  The name of the
 file group is referenced in the check configuration as the item.

 File grouping patterns combine a simple pattern based on {*} and {?} to
 join a subset of the file names send by the agent into a file group. In
 addition an {exclude} pattern may be defined to exclude certain filenames.

 Furthermore, the current time/date in a configurable format may be
 included in the pattern. The syntax is as follows: {$DATE:format-spec$},
 where {format-spec} is a list of time format directives of the unix date
 command.  Example: {$DATE:%Y%m%d$} is todays date, e.g. 20140127. A pattern
 of {/var/tmp/backups/$DATE:%Y%m%d$.txt} would search for .txt files with
 todays date as name in the directory /var/tmp/backups.

item:
 Configured name of the file group

examples:
 # old syntax of file group patterns, still valid
 fileinfo_groups = [
     ([("Auth_group",r"/var/log/auth*")], ALL_HOSTS),
     ([("Message_group", r"/var/log/messages*")], ['test2'], ALL_HOSTS),
 ]

 # new syntax of file group patterns, including exclude pattern
 fileinfo_groups = [
     ([("Auth_group", ("/var/log/auth*","/var/log/*.debug"))], ALL_HOSTS),
     ([("Message_group", ("/var/log/messages*",""))], ['test2'], ALL_HOSTS),
 ]

 # syntax of check
 check_parameters = [
  ({
    "minsize": (200.0, 300.0),
    "maxsize": (400.0, 500.0),
    "mincount": (2, 3),
    "maxcount": (3, 4),
    "minage_oldest": (50, 60),
    "maxage_oldest": (100, 120),
    "minage_newest": (10, 20),
    "maxage_newest": (30, 40),
    "minsize_largest": (2048, 1024),
    "maxsize_largest": (2048, 1024),
    "minsize_largest": (10240, 20480),
    "maxsize_largest": (10240, 20480),
   }, ALL_HOSTS, ["File group"]),
 ]

perfdata:
  Four values: the aggregated size of all files in group, the age
  of the oldest and newest file in seconds (the time since the last
  modification of the file) and the count of all files.

inventory:
  You have to configure at least on pattern for each
  fileinfo group

[parameters]
parameters (dict): This check uses dictionary based
 parameters. Per default no parameters are set and
 the check is always OK.


 {"minage_oldest"}: A pair of integers for the warning and
 critical level of the minimum file age in seconds
 for the oldest file found with the file group pattern.
 A missing key or {None} disables the minimum age
 checking. The borders itself always belong to the
 better state, so {(60, 120)} will make the check
 OK as long as the age of the file is not exceeding
 60 seconds and warning if the age is 120 seconds
 or less.

 {"maxage_oldest"}: Pair of integers for the maximum file
 age in seconds for the oldest file found with file group pattern.

 {"minage_newest"}: Pair of integers for the minimum file
 age in seconds for the newest file found with file group pattern.

 {"maxage_newest"}: Pair of integers for the maximum file
 age in seconds for the newest file found with file group pattern.

 {"minsize_smallest"}: Pair of integers for the minimum file
 size in bytes for the smallest file found with the file group pattern.

 {"maxsize_smallest"}: Pair of integers for the maximum file
 size in bytes for the smallest file found with the file group pattern.

 {"minsize_largest"}: Pair of integers for the minimum file
 size in bytes for the largest file found with the file group pattern.

 {"maxsize_largest"}: Pair of integers for the maximum file
 size in bytes for the largest file found with the file group pattern.

 {"minsize"}: The minimum size for the aggregation of all files in bytes (pair of
 integers).

 {"maxsize"}: The maximum size.

 {"mincount"}: The minimum count of all files aggregatet in the group

 {"maxcount"}: The maximum count
