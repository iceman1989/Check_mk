#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


threads_default_levels = (2000, 4000)

def inventory_bluecat_threads(info):
    if info:
        return [(None, "threads_default_levels")]

def check_bluecat_threads(item, params, info):
    nthreads = int(info[0][0])
    warn, crit = params
    perfdata = [('threads', nthreads, warn, crit, 0 )]
    if nthreads >= crit:
        return (2, "%d threads (critical at %d)" % (nthreads, crit), perfdata)
    elif nthreads >= warn:
        return (1, "%d threads (warning at %d)" % (nthreads, warn), perfdata)
    else:
        return (0, "%d threads" % (nthreads,), perfdata)

check_info["bluecat_threads"] = {
    "check_function"            : check_bluecat_threads,
    "inventory_function"        : inventory_bluecat_threads,
    "service_description"       : "Number of threads",
    "group"                     : "threads",
    "has_perfdata"              : True,
    "snmp_scan_function"        : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.13315.100.200"),
    "snmp_info"                 : (".1.3.6.1.4.1.13315.100.200.1.1.2", [
                                                                          1, # activeThreadCount
                                                                       ])
}

