#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# Author: Markus Lengler <ml@lengler-it.de>

# Example outputs from agent:
#
# <<<dmraid>>>
# name   : isw_ebdabbedfh_system
# status : ok
# /dev/sda: isw, "isw_ebdabbedfh", GROUP, ok, 976773166 sectors, data@ 0 Model: WDC WD5002ABYS-5
# /dev/sdb: isw, "isw_ebdabbedfh", GROUP, ok, 976773166 sectors, data@ 0 Model: WDC WD5002ABYS-5


def inventory_dmraid(checkname, info):
    inventory=[]
    for line in info:
        if checkname == "dmraid.ldisks" and line[0] == "name":
            inventory.append((line[2], None))
        elif checkname == "dmraid.pdisks" and line[0].startswith("/dev/sd"):
            item = line[0].split(":")[0]
            inventory.append((item, None))
    return inventory


def check_dmraid_pdisks(item, _no_params, info):
    for line in info:
        if line[0].startswith("/dev/sd"):
            disk = line[0].split(":")[0]
            if disk == item:
                status = line[4].split(",")[0]
                if status == "ok":
                    pos=line.index("Model:")
                    model=" ".join(line[pos+1:])
                    return (0, "Online (%s)" % model)
                else:
                    return (2, "Error on disk!!")
    return (2, "Missing disk!!")


def check_dmraid_ldisks(item, _no_params, info):
    LDISK_FOUND=False
    for line in info:
        if  LDISK_FOUND:
            if line[0] == "status":
                status = line[2]
                if   status == "ok":
                    return(0, "state is %s" % status)
                else:
                    return(2, "%s" % status)
        if line[0] == "name" and line[2] == item:
            LDISK_FOUND=True

    return (3, "incomplete data from agent")





check_info["dmraid.ldisks"] = {
    'check_function':          check_dmraid_ldisks,
    'inventory_function':      inventory_dmraid,
    'service_description':     'RAID LDisk %s',
}

check_info["dmraid.pdisks"] = {
    'check_function':          check_dmraid_pdisks,
    'inventory_function':      inventory_dmraid,
    'service_description':     'RAID PDisk %s',
}
