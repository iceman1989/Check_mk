#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_unitrends_replication(info):
    inventory = []
    for application, result, complete, target, instance in info:
        if target not in [ x[0] for x in inventory ]:
            inventory.append( (target, None) )
    return inventory

def check_unitrends_replication(item, _no_params, info):
    # this never gone be a blessed check :)
    replications = [ x for x in info if x[3] == item ]
    if len(replications) == 0:
        return 3, "No Entries found"
    not_successfull = [ x for x in replications if x[1] != "Success"]
    if len(not_successfull) == 0:
        return 0, "All Replications in the last 24 hours Successfull"
    messages = []
    for application, result, complete, target, instance in not_successfull:
        messages.append( "Target: %s, Result: %s, Instance: %s  " % ( target, result, instance ))
    # TODO: Maybe a good place to use multiline output here
    return 2, "Errors from the last 24 hours: " + "/ ".join(messages)

check_info["unitrends_replication"] = {
    "check_function"        : check_unitrends_replication,
    "inventory_function"    : inventory_unitrends_replication,
    "service_description"   : "Replicaion %s",
}

