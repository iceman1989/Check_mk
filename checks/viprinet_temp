#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def check_viprinet_temp(item, params, info):
    state = 0
    value = saveint(info[0][item == "System"])
    state_info = ""

    warn = ""
    crit = ""
    if params:
        warn, crit = params
        if value > crit:
            state_info = "(crit at %d°C)" % crit
            state = 2
        elif value > warn:
            state_info = "(warn at %d°C)" % warn
            state = 1

    infotext = "%s: %s°C %s" % (item, value, state_info)
    return state, infotext, [("temp", value, warn, crit)]


check_info["viprinet_temp"] = {
    'check_function'        : check_viprinet_temp,
    'inventory_function'    : lambda info: len(info) > 0 and [("CPU", None), ("System", None)] or [],
    'service_description'   : "Temperature %s",
    'group'                 : "room_temperature",
    'has_perfdata'          : True,
    'snmp_info'             : (".1.3.6.1.4.1.35424.1.2", [3, 4]),
    'snmp_scan_function'    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in [".1.3.6.1.4.1.35424"],
}

