#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


kemp_loadmaster_service_default_levels = ( 1500, 2000 )

def inventory_kemp_loadmaster_services(info):
    return [ ( x[0], kemp_loadmaster_service_default_levels ) for x in info ]

def check_kemp_loadmaster_services(item, _no_params, info):
    service_states = ( 'in Service',
                       'out of Service',
                       'failed',
                       'disabled',
                       'sorry',
                       'redirect',
                       'errormsg')
    for line in info:
        if line[0] == item:
            service_state, conns = map(saveint, line[1:])
            message = "State: %s" % (service_states[service_state-1])
            perfdata = [ ('conns', conns) ]
            state = 3
            if service_state in [ 1, 6 ]:
                message +=  ", Active Connections: %s" % conns
                state = 0
            if service_state ==  5:
                state = 1
            if service_state in [ 2, 3, 7 ]:
                state = 2
            return (state, message, perfdata)
    return 3, "Service not found"

check_info["kemp_loadmaster_services"] = {
    "check_function"        : check_kemp_loadmaster_services,
    "inventory_function"    : inventory_kemp_loadmaster_services,
    "service_description"   : "Service %s",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.12196.250.10" or oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.2021.250.10",
    "snmp_info"             : ( ".1.3.6.1.4.1.12196.13.1.1", [
                                            13,   # name
                                            14,   # state
                                            21,   # conns
                                                             ] ),
}
