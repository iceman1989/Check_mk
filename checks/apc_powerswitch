#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

apc_powerswitch_warning_states = (2,)
apc_powerswitch_critical_states  = ()


def inventory_apc_powerswitch(info):
    return [ (x[0],saveint(x[2])) for x in info if x[1] == "1" ]

def check_apc_powerswitch(item, params, info):
    state_name = {
        1 : 'on',
        2 : 'off',
    }
    r_state = 0
    for line in info:
        if line[0] == item:
            state = saveint(line[2])
            if state in apc_powerswitch_warning_states:
                r_state = 1
            if state in apc_powerswitch_critical_states:
                r_state = 2
            return(r_state, 'Port %s has status %s' % (line[1], state_name[state]))

    return 3, "Port not found"

check_info['apc_powerswitch'] = {
    'check_function' : check_apc_powerswitch,
    'inventory_function' : inventory_apc_powerswitch,
    'snmp_scan_function' : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3.4"),
    'service_description' : 'Power Outlet Port %s',
    'snmp_info' : ( '.1.3.6.1.4.1.318.1.1.12.3.5.1.1', [1, 2, 4] ),
}
