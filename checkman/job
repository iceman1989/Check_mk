title: Job Monitoring
agents: linux
catalog: os/services
license: GPL
distribution: check_mk
description:
 This check monitors state and performance information of any linux program
 call, for example regular running cronjobs.

 The check uses information provided by the wrapper program {mk-job}. This
 program is shipped with the linux agent and installed to {/usr/bin}.
 {mk-job} is a wrapper which is called instead of the program. For
 example, if you have a command line {nightly-backup >/dev/null} which gets
 executed by a cronjob every night, you can change the command line to
 {mk-job backup nightly-backup >/dev/null} to let mk-job collect information
 about the job during runtime. In this expression, the string {backup} is
 the identifier of the job to be executed. It must be a unique identifier
 for this job on each host. When the job is finished, {mk-job} writes the
 collected data to {/var/lib/check_mk_agent/job/<identifier>}. The agent sends
 all these data to the Check_MK server.

 The check is {CRITICAL} if the exit code of the job is not {0}, or if
 warning or critical limits for the job age have been reached.

 Limits can be configured with WATO.

item:
 The identifier of the job defined by the first argument to {mk-job}.

inventory:
 One check per job will be created.

perfdata:
 {real_time}: Elapsed real time in seconds.
 {user_time}: Total number of CPU-seconds that the process spent in user mode.
 {system_time}: Total number of CPU-seconds that the process spent in kernel mode.
 {reads}: Number of file system inputs by the process.
 {writes}: Number of file system outputs by the process.
 {max_res_bytes}: Maximum resident set size of the process during its lifetime.
 {avg_mem_bytes}: Average total (data+stack+text) memory use of the process.

[parameters]
parameters(dict): parameters is a dictionary with one key

 {"age"}: contains a tuple for the warning and critical limits for the time
 since last start of the job. Units are seconds.

[configuration]
job_default_levels(dict): This variable is preset to {{ "age": ( 0, 0 ) }}, which means that the limits are disabled
