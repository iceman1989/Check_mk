#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_kentix_temp(info):
    if info:
        return [ (None, None ) ]

def check_kentix_temp(_no_item, _no_params, info):
    value, lower_warn, upper_warn, alarm, text = info[0]
    temp = float(value)/10
    perfdata = [ ("temp", temp, lower_warn+":"+upper_warn ) ]
    upper_warn = float(upper_warn)
    lower_warn = float(lower_warn)
    infotext = "%.1f C (min/max at %.1f/%.1f C)" % (temp, lower_warn, upper_warn)
    if temp >= upper_warn or temp <= lower_warn:
        state = 1
        infotext = "%s:  %s" % (text, infotext)
    else:
        state = 0
    return state, infotext, perfdata

check_info["kentix_temp"] = {
    'check_function':          check_kentix_temp,
    'inventory_function':      inventory_kentix_temp,
    'service_description':     'Temperature',
    'has_perfdata':            True,
    'snmp_info':               ('.1.3.6.1.4.1.37954.3.1.1',
                    ['1', # temperatureValue
                     '2', # temperatureMin
                     '3', # temperatureMax
                     '4', # temperatureAlarm, not used here
                     '5', # temperatureAlarmtext
                     ]
    ),
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.332.11.6"),
}
