#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# ------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# ------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<db2_bp_hitratios>>>

def inventory_db2_bp_hitratios(info):
    inventory = []
    current_instance = ""
    for line in info:
        if line[0].startswith("[[["):
            current_instance = line[0][3:-3]
            found_headers = False
            continue
        if not found_headers:
            found_headers = True
            continue
        inventory.append(("%s:%s" % (current_instance, line[0]), {}))
    return inventory

def check_db2_bp_hitratios(item, no_params, info):
    lines = iter(info)
    try:
        while True:
            line = lines.next()
            if line[0].startswith("[[["):
                current_instance = line[0][3:-3]
                headers = lines.next()
                continue
            if item == "%s:%s" % (current_instance, line[0]):
                hr_info = dict(zip(headers[1:], line[1:])) # skip BP_NAME
                for key, value in hr_info.items():
                    value = value.replace("-","0")
                    key   = key.replace("_RATIO_PERCENT","")
                    yield 0, "%s: %s%%" % (key, value), [(key, float(value),0,0,0,100)]
                return
    except StopIteration:
        pass

check_info['db2_bp_hitratios'] = {
    "service_description"     : "DB2 BP-Hitratios %s",
    "check_function"          : check_db2_bp_hitratios,
    "inventory_function"      : inventory_db2_bp_hitratios,
    "has_perfdata"            : True
}
