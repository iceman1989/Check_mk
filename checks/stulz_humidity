#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

stulz_humidity_default_levels = ( 35, 40, 60, 65 )

def inventory_stulz_humidity(info):
    return [ (x[0], "stulz_humidity_default_levels" ) for x in info ]

def check_stulz_humidity(item, params, info):
    for line in info:
        if line[0] == item:
            critlow, warnlow, warnhigh, crithigh = params
            humidity = savefloat(line[1])/10
            infotext = "%s%% (warn/crit below %.1f/%.1f or above %.1f/%.1f %%)" % \
                            ( humidity, warnlow, critlow, warnhigh, crithigh)

            perfdata = [ ('humidity', humidity, critlow, warnlow, warnhigh, crithigh ) ]
            if humidity <= critlow or humidity >= crithigh:
                return (2, "Humidity is: " + infotext, perfdata )
            elif humidity <= warnlow or humidity >= warnhigh:
                return (1, "Humidity is: " + infotext, perfdata )
            else:
                return (0, "Humidity is: " + infotext, perfdata )

    return 3, "No information found about the device"

check_info["stulz_humidity"] = {
    "check_function"        : check_stulz_humidity,
    "inventory_function"    : inventory_stulz_humidity,
    "service_description"   : "Humidity %s ",
    "has_perfdata"          : True,
    "group"                 : "humidity",
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.29462.10",
    "snmp_info"             : ( ".1.3.6.1.4.1.29462.10.2.1.1.1.1.2.1.1.1194", [ OID_END, 1] ),
}

