#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# [['301', '28495']], [['112', '24']], [['113', '14880']], [['122', '146']], [['123', '15870']], [['501', '3761']], [['101', '30920']]

canon_pages_map = {
    'total'       :  '101',
    'b/w A3'      :  '112',
    'b/w A4'      :  '113',
    'color A3'    :  '122',
    'color A4'    :  '123',
    'print total' :  '301',
    'scan'        :  '501',
}

def inventory_canon_pages(info):
    inventory = []
    for endoid, value in info:
        for name, eo in canon_pages_map.items():
            if eo == endoid:
                inventory.append((name, None))
    return inventory

def check_canon_pages(item, _no_params, info):
    if item not in canon_pages_map:
        return (3, "unknown counter type %s" % item)
    for endoid, value in info:
        if endoid == canon_pages_map[item]:
            return (0, '%s pages printed' % value, [('count', int(value))])

    return (3, 'Item not found in SNMP data')

check_info["canon_pages"] = {
    'check_function':          check_canon_pages,
    'inventory_function':      inventory_canon_pages,
    'service_description':     'Pages %s',
    'has_perfdata':            True,
    'snmp_info':               ( ".1.3.6.1.4.1.1602.1.11.1.3.1.4", [ OID_END, "" ]),
    'snmp_scan_function':      lambda oid: oid(".1.3.6.1.4.1.1602.1.1.1.1.0") != None
}

