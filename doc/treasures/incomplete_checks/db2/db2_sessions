#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# ------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# ------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<db2_sessions>>>
# db2taddm DB2v10.1.0.4,s140509(IP23577)

def inventory_db2_sessions(info):
    inventory = []
    for line in info:
        if line[0].startswith("[[["):
            inventory.append((line[0][3:-3], {}))
    return inventory

def check_db2_sessions(item, no_params, info):
    found_match = False
    for line in info:
        if item == line[0][3:-3]:
            found_match = True
            continue

        if found_match:
            if line[0].startswith("[[["):
                break
        else:
            continue
        
        info, value = line
        if info == "connections":
            yield 0, "%s: %s" % (info.title(), value), [(info, int(value))]
        elif info == "latency":
            minutes, rest = value.split(":")
            seconds, mseconds = rest.split(".") 
            ms = int(minutes) * 60 * 1000 + int(seconds) * 1000 + int(mseconds)
            yield 0, "%s: %.2f ms" % (info.title(), ms), [(info, ms)]
        else:
            yield 0, "%s: %s" % (info.title(), value)

    if not found_match:
        yield 3, "Database not found in agent output"

check_info['db2_sessions'] = {
    "service_description"     : "DB2 Session %s",
    "check_function"          : check_db2_sessions,
    "inventory_function"      : inventory_db2_sessions,
    "has_perfdata"            : True
}
