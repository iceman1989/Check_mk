#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# iso.3.6.1.4.1.231.7.2.9.1.1.0 = INTEGER: 1
#The actual error state of the Octopus E PABX. Contains the highest severity level of the recent error events. This object is updated automatically, but it can also be modified manually.

#{ normal(1), warning(2), minor(3), major(4), critical(5) }


def inventory_octopus_status(info):
    if len(info[0][0]) == 1:
        return [(None, None)]


def check_octopus_status(_no_item, _no_params_info, info):
   octopus_states_map = { 1 : (0, "normal"  ),
                         2 : (1, "warning" ),
                         3 : (1, "minor"   ),
                         4 : (2, "major"   ),
                         5 : (2, "critical")}


   octopus_state = int(info[0][0][0])
   state = octopus_states_map[octopus_state][0]
   desc  = octopus_states_map[octopus_state][1]

   msg = "PBX system state is %s" % desc
   if octopus_state >= 3:
       msg += " error"
   return (state, msg)


check_info['sni_octopuse_status'] = {
    'check_function'     : check_octopus_status,
    'inventory_function' : inventory_octopus_status,
    'service_description': "Global status",
    'has_perfdata'       : True,
    'snmp_scan_function' : lambda oid: "agent for hipath" in \
                                  oid(".1.3.6.1.2.1.1.1.0").lower(),
    'snmp_info'          : [ (".1.3.6.1.4.1.231.7.2.9", ["1.1.0"]),
                            ]
}
