#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

mikrotik_signal_default_levels = ( 80, 70 )

def inventory_mikrotik_signal(info):
    inventory = []
    for network, strenght, mode in info:
        inventory.append((network, "mikrotik_signal_default_levels"))
    return inventory

def check_mikrotik_signal(item, params, info):
    warn, crit = params
    for network, strenght, mode in info:
        if network == item:
            strenght = saveint(strenght)
            quality = "0"
            if strenght <= -50 or strenght >= -100:
                quality = 2 * ( strenght + 100 )
            if quality > 100:
                quality = 100

            infotext = "Signal quality %d%% (%ddBm). Mode is: %s" % ( quality, strenght, mode )
            perf = [ ("quality", quality, warn, crit) ]
            if quality <= crit:
                return 2, infotext, perf
            if quality <= warn:
                return 1, infotext, perf
            return 0, infotext, perf

    return 3, "Network not found"

check_info["mikrotik_signal"] = {
    "group"                 : "signal_quality",
    "check_function"        : check_mikrotik_signal,
    "inventory_function"    : inventory_mikrotik_signal,
    "service_description"   : "Signal %s",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.14988.1.1.1.1.1", [ "5.2", "4.2", "8.2" ] ),
    "snmp_scan_function"    : lambda oid: ".1.3.6.1.4.1.14988.1" in oid(".1.3.6.1.2.1.1.2.0")
}
