#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_superstack3_sensors(info):
    return [ (line[0], None) for line in info if line[1] != 'not present' ]

def check_superstack3_sensors(item, params, info):
    for name, state in info:
        if name == item:
            if state == "failure":
                return (2, "status is %s" % state )
            elif state == "operational":
                return (0, "status is %s" % state )
            else:
                return (1, "status is %s" % state )
    return (3, "UNKOWN - sensor not found")






check_info["superstack3_sensors"] = {
    'check_function':          check_superstack3_sensors,
    'inventory_function':      inventory_superstack3_sensors,
    'service_description':     '%s',
    'snmp_info':               ('.1.3.6.1.4.1.43.43.1.1', ['7', '10']),
    'snmp_scan_function':      \
     lambda oid: "3com superstack 3" in oid (".1.3.6.1.2.1.1.1.0").lower(),
}
