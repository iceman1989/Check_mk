#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


ups_bat_temp_default = (40, 50) # warning / critical

def inventory_ups_bat_temp(info):
    # 2nd condition is needed to catch some UPS devices which do not have
    # any temperature sensor but report a 0 as upsBatteryTemperature. Skip those lines
    if len(info) > 0 and saveint(info[0][1]) != 0:
        return [ ( x[0], "ups_bat_temp_default") for x in info ]

def check_ups_bat_temp(item, params, info):
    for line in info:
	if line[0] == item:
            status, infotext, perfdata = check_temperature(int(line[1]), params)
            perfdatanew = [ perfdata[0] + (80,) ]
            return status, infotext, perfdatanew


check_info['ups_bat_temp'] = {
  "inventory_function"  : inventory_ups_bat_temp,
  "check_function"      : check_ups_bat_temp,
  "service_description" : "Temperature Battery %s",
  "has_perfdata"        : True,
  "group"               : "hw_temperature",
  "snmp_info"           : ( ".1.3.6.1.2.1.33.1", [
                              "1.5", # upsIdentName
                              "2.7", # upsBatteryTemperature
                          ] ),
  "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in \
                         [ ".1.3.6.1.4.1.818.1.100.1.1", ".1.3.6.1.4.1.705.1.2", ".1.3.6.1.2.1.33", ".1.3.6.1.2.1.33.2", ".1.3.6.1.4.1.818.1.100.1.2" ] \
                         or oid('.1.3.6.1.2.1.33.1.1.1.0').startswith('RPS'),
  "includes"            : [ "temperature.include" ],
}
