#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_emc_isilon_diskstatus(info):
    inventory = []
    for disk_id, name, disk_status, serial in info:
        inventory.append( (disk_id, None) )
    return inventory

def check_emc_isilon_diskstatus(item, _no_params, info):
    for disk_id, name, disk_status, serial in info:
        if disk_id == item:
            message  = "Disk %s, serial number %s status is %s" % (name, serial, disk_status)
            if disk_status == "HEALTHY":
                status = 0
            else:
                status = 2
            return status, message
    return 3, "Disk %s not found" % item

check_info["emc_isilon_diskstatus"] = {
    "check_function"        : check_emc_isilon_diskstatus,
    "inventory_function"    : inventory_emc_isilon_diskstatus,
    "service_description"   : "Disk bay %s Status",
    "snmp_info"             : (".1.3.6.1.4.1.12124.2.52.1",
                                   [ 1,    # diskBay
                                     4,    # diskDeviceName
                                     5,    # diskStatus
                                     7,    # diskSerialNumber
                              ]),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.12124.1")
}

