#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Check has been developed using a Emerson Network Power Rack PDU Card
# Agent App Firmware Version  4.840.0
# Agent Boot Firmware Version 4.540.3
# FDM Version 1209
# GDD Version 45585

# Example info:
# [['1', 'TEST-123-HOST', '1', '535055G103T2010JUN240295', '1']]

def inventory_lgp_pdu_info(info):
    if info:
        inv = []
        for pdu in info:
            # Use the SysAssignLabel as item
            inv.append((pdu[2], None))
        return inv

def check_lgp_pdu_info(item, params, info):
    for pdu in info:
        if pdu[2] == item:
            return (0, 'Entry-ID: %s, Label: %s (%s), S/N: %s, Num. RCs: %s' % tuple(pdu))

    return (3, 'Device can not be found in SNMP output.')

check_info["lgp_pdu_info"] = {
    'check_function':          check_lgp_pdu_info,
    'inventory_function':      inventory_lgp_pdu_info,
    'service_description':     'Liebert PDU Info %s',
    'snmp_info':               ('.1.3.6.1.4.1.476.1.42.3.8.20.1', [
                                    5,  # LIEBERT-GP-PDU-MIB::lgpPduEntryId
                                    10, # LIEBERT-GP-PDU-MIB::lgpPduEntryUsrLabel
                                    15, # LIEBERT-GP-PDU-MIB::lgpPduEntrySysAssignLabel
                                    45, # LIEBERT-GP-PDU-MIB::lgpPduEntrySerialNumber
                                    50, # LIEBERT-GP-PDU-MIB::lgpPduEntryRbCount
                                ]),
    'snmp_scan_function':      lambda oid: oid('.1.3.6.1.2.1.1.2.0') == \
                                                          '.1.3.6.1.4.1.476.1.42',
}
