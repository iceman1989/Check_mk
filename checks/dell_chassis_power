#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_dell_chassis_power(info):
    if info:
        return [ ( None, None ) ]

def check_dell_chassis_power(item, _no_params, info):
    status, PotentialPower, MaxPowerSpec, power, current = info[0]
    state_table = {
        "1" : ( "other, ", 1 ),
        "2" : ( "unknown, ", 1 ),
        "3" : ( "", 0 ),
        "4" : ( "nonCritical, ", 1 ),
        "5" : ( "Critical, ", 2 ),
        "6" : ( "NonRecoverable, ", 2 ),
    }
    infotext, state = state_table.get(status, ("unknown state, ", 3 ))

    infotext += "Power: %.1f W, PotentialPower: %.1f W, MaxPower: %.1f W, Current: %.1f A" \
        % ( savefloat(power), savefloat(PotentialPower), savefloat(MaxPowerSpec), savefloat(current) )

    perfdata = [ ( "power" , power+"Watt", 0, PotentialPower , "", MaxPowerSpec )]

    return state, infotext, perfdata

check_info["dell_chassis_power"] = {
    "check_function"        : check_dell_chassis_power,
    "inventory_function"    : inventory_dell_chassis_power,
    "service_description"   : "Chassis Power",
    "has_perfdata"          : True,
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10892.2", [
                                      "3.1.5.0", # drsPowerCurrStatus         0
                                      "4.1.1.2.1", # drsPotentialPower        1
                                      "4.1.1.4.1", # drsMaxPowerSpecification 2
                                      "4.1.1.13.1", # drsWattsReading         3
                                      "4.1.1.14.1", # drsAmpsReading          4
                              ]),
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == ".1.3.6.1.4.1.674.10892.2",
}

